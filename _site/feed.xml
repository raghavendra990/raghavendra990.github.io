<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raghav Blog</title>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://localhost:4000/</link>
    <description>A Data Science enthusiast</description>
    <pubDate>Mon, 24 Apr 2017 15:22:20 +0530</pubDate>
    
      <item>
        <title>Django Tutorial for starters</title>
        <link>http://localhost:4000/2015/09/07/django-starter-tutorial.html</link>
        <guid isPermaLink="true">http://localhost:4000/2015/09/07/django-starter-tutorial.html</guid>
        <description>&lt;p&gt;Hi guys, I am writing this blog to help people starting with Django. This tutorial inclined on basic of Django so that any one cat start with. If anyone has some other doubt than free to ask me by making a comment or email me. 
&lt;br /&gt;
Django is python framework for web development, Before Jango I only know &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;(Other python Framework), it is very much similar to a simple python programming. For learning Flask, you only have to read very first page of there documentation And you ready to build. whereas Django is the vast and versatile framework. It is very nicely written so to make your code look cleaner. 
&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Start with basic installation&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
Install using pip:
&lt;br /&gt;
&lt;code style=&quot;background-color: #d3d3d3&quot;&gt;pip install django&lt;/code&gt;
&lt;br /&gt;
confirm install by typing:
&lt;br /&gt;
&lt;code style=&quot;background-color: #d3d3d3&quot;&gt;django-admin --version&lt;/code&gt;
&lt;br /&gt;
&lt;code style=&quot;background-color: #d3d3d3&quot;&gt;1.9&lt;/code&gt;
&lt;br /&gt;
&lt;b&gt;No error uptill here, means you have succefully install django&lt;/b&gt;
&lt;br /&gt;
Make directory &lt;code style=&quot;background-color: #d3d3d3&quot;&gt;django_project&lt;/code&gt; by typing command:
&lt;br /&gt; &lt;code style=&quot;background-color: #d3d3d3&quot;&gt;mkdir django_project&lt;/code&gt;
&lt;br /&gt;
Now let’s do some Django. 
&lt;br /&gt;&lt;/p&gt;
&lt;h4&gt;Creating a project:&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
From command line cd into directory and run following command:
&lt;code style=&quot;background-color: #d3d3d3&quot;&gt;django-admin startproject mysite&lt;/code&gt;
&lt;br /&gt;
This will create Django project name “mysite”. 
&lt;br /&gt;
Let’s look at what startproject created:
&lt;br /&gt;
&lt;code style=&quot;background-color: &quot;&gt;
mysite/&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;manage.py&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mysite/&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;__init__.py&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;settings.py&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;urls.py&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wsgi.py&lt;br /&gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The outer mysite/ root directory is just a container for your project.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;manage.py&lt;/code&gt; is a command line utility that interacts with Django project in various ways.&lt;/li&gt;
  &lt;li&gt;The inner mysite/ directory is the actual Python package for your project.&lt;/li&gt;
  &lt;li&gt;mysite/__init__.py: An empty file that tells Python that this directory should be considered a Python package. &lt;/li&gt;
  &lt;li&gt;mysite/settings.py: Settings/configuration for this Django project. It contains configuration related to database setup, template static file location etc.&lt;/li&gt;
  &lt;li&gt;mysite/urls.py: The URL declarations for this Django project; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4&gt;Development server&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
&lt;code style=&quot;background-color: &quot;&gt;python manage.py runserver&lt;/code&gt;
&lt;br /&gt;
In your web browser type &lt;code&gt;http://127.0.0.1:8000/&lt;/code&gt;. You will probably be going to see the nice light blue window showing a success message.  &lt;br /&gt;
Django comes with lightweight development server so that you can boost development of your application. But we suggest not to used for production. 
&lt;br /&gt;&lt;b&gt;Congratulate guys you have successfully installed Django&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
Now next part is adding application and basic functioning of files present.
&lt;br /&gt;&lt;/p&gt;
&lt;h4&gt;Creating polls app:&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
For creating your first app type command:&lt;br /&gt;
&lt;code style=&quot;background-color: &quot;&gt;python manage.py startapp polls&lt;/code&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This command will generate polls directory with follwing file:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;polls/&lt;br /&gt;
    &lt;strong&gt;init&lt;/strong&gt;.py&lt;br /&gt;
    admin.py&lt;br /&gt;
    apps.py&lt;br /&gt;
    migrations/&lt;br /&gt;
        &lt;strong&gt;init&lt;/strong&gt;.py&lt;br /&gt;
    models.py&lt;br /&gt;
    tests.py&lt;br /&gt;
    views.py&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Writing views&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
“Views.py” as by name is responsible what user will view. Views are written in file views.py .&lt;br /&gt;
&lt;code&gt;polls/views.py&lt;/code&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello, world. You&amp;#39;re at the polls index.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is simplest view in Django. Views are called when they map with URL - for this we need to URLconf.
&lt;br /&gt;
To create a URLconf in the polls directory, create a file called urls.py. Your app directory will look like:
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;polls/&lt;br /&gt;
    &lt;strong&gt;init&lt;/strong&gt;.py&lt;br /&gt;
    admin.py&lt;br /&gt;
    apps.py&lt;br /&gt;
    migrations/&lt;br /&gt;
        &lt;strong&gt;init&lt;/strong&gt;.py&lt;br /&gt;
    models.py&lt;br /&gt;
    tests.py&lt;br /&gt;
    urls.py&lt;br /&gt;
    views.py&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In the polls/urls.py file include the following code:
&lt;br /&gt;
&lt;code&gt;polls/urls.py&lt;/code&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.conf.urls&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;urlpatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;^$&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The next step is to point the root URLconf at the &lt;code&gt;polls.urls&lt;/code&gt; module. In,  &lt;code&gt;mysite./urls.py&lt;/code&gt;, add an import for django.conf.urls.include and insert an include() in the “urlpatterns” list, so you have:
&lt;code&gt;mysite/urls.py&lt;/code&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.conf.urls&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.contrib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;urlpatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;^polls/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;polls.urls&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;^admin/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now again runserver, And go to link &lt;a href=&quot;http://localhost:8000/polls/&quot;&gt; http://localhost:8000/polls/&lt;/a&gt; in your browser.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;you are done with basic django installation now for more learning got &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/intro/tutorial02/&quot;&gt;Django Official tutorial part 2&lt;/a&gt;.
&lt;br /&gt;
For any suggestion bugs and doubt feel free to comment or email.
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Sep 2015 00:00:00 +0530</pubDate>
      </item>
    
      <item>
        <title>Scrapping Infinitely scrolling websites Using Pthon Selenium</title>
        <link>http://localhost:4000/2015/08/22/scrapping-using-selenium.html</link>
        <guid isPermaLink="true">http://localhost:4000/2015/08/22/scrapping-using-selenium.html</guid>
        <description>&lt;p&gt;Recently I had work on the project in which I have to scrap data from websites &lt;a href=&quot;http://www.jabong.com/&quot;&gt;Jabong&lt;/a&gt; —– looks easy ….??? No because websites like Jabong are not fixed length websites like IMDB which I have use in my blog, websites like jabong automatically expand when scroll down to bottom and keem on expanding untill all products in category get over.&lt;/p&gt;

&lt;p&gt;So for this case, If we use &lt;code&gt;lxml&lt;/code&gt; as I have used in the previous post, &lt;code&gt;lxml&lt;/code&gt; will work but problem is, that it will only scrap the products which are listed on the initial page, around 52 products will be scrapped, but for scraping 20,000 products we have to use some thing extra.&lt;/p&gt;

&lt;p&gt;The biggest problem is that how to get scroll the page to bottom. Some here comes &lt;code&gt;selenium&lt;/code&gt; python package. Selenium Python bindings provides a simple API to write functional/acceptance tests using Selenium WebDriver. It open a web browser and your python program will interact with it. &lt;code&gt;Selenium&lt;/code&gt; contain various browser action keys like scrolling, selecting and &lt;code&gt;Xpath&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To install &lt;code&gt;Selenium&lt;/code&gt; python package type
&lt;code&gt;pip install selenium&lt;/code&gt; in your terminal.&lt;/p&gt;

&lt;h3 id=&quot;import-necessary-packages&quot;&gt;Import necessary packages&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#open webdriver for specific browser&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.common.keys&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Keys&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# for necessary browser action&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# For selecting html code&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you done with imports of necessary packages, now launch webdriver specific for your browser. I am using firefox in this case you can use any browser depends on selenium list of supported browser.
It will open the web browser.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.jabong.com/men/clothing/polos-tshirts/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now next thing is that you have to scroll down untill to the end of the page or upto specific number of times depends on how much products you want. I am scrolling 50 times, In each scrolling 52 products are added so for 50 X 52 = 2600 , around 2600 products will scrap. And after each scroll I used to wait for 3 sec so that html page load properly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;window.scrollTo(0, document.body.scrollHeight);&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After doing this we are having html content for all the products. Now the thing required is to scrap the necessary info from page, so for our case we are scraping product-url for each product. so for this we are using &lt;code&gt;xpath&lt;/code&gt; selector, If in case you want learn about &lt;code&gt;xpath&lt;/code&gt; &lt;a href=&quot;http://www.w3schools.com/xsl/xpath_intro.asp&quot;&gt;click here.&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;data-url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###Writing whole code in once.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#open webdriver for specific browser&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.common.keys&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Keys&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# for necessary browser action&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# For selecting html code&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;   

&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.jabong.com/men/clothing/polos-tshirts/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;url_scrp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;window.scrollTo(0, document.body.scrollHeight);&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XPATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;//ul[@id=&amp;quot;productsCatalog&amp;quot;]/li&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For any typos and any problem feel free to comment and and mail.
Piece :)&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Aug 2015 00:00:00 +0530</pubDate>
      </item>
    
  </channel>
</rss>
